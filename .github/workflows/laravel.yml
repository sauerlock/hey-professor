name: Laravel

on:
  pull_request:
    branches: ["main", "develop"]
    
jobs:
  laravel-tests:
  build-test:
    name: Build & Test
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Setting MySql 8
        run: |
          echo -e "Enable LOAD DATA LOCAL INFILE in my.cnf\n"
          echo -e "SETTING secure-file-priv TO EMPTY STRING\n"
          echo -e "[mysqld]\nsecure-file-priv=''" | sudo tee -a /etc/mysql/my.cnf
          echo -e "SETTING local_infile TO ON\n"
          echo -e "[mysqld]\nlocal_infile='ON'" | sudo tee -a /etc/mysql/my.cnf
          echo -e "Start MYSQL service, it is off by default\n"
          sudo systemctl enable mysql.service
          sudo systemctl start mysql.service
          echo -e "Creating Laravel Database\n"
          mysql --host 127.0.0.1 -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS laravel;'
          echo -e "Check new settings\n"
          mysql --host 127.0.0.1 -uroot -proot -e "SELECT @@global.secure_file_priv, @@global.local_infile"
        working-directory: .

  

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.1'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database 
        touch database/database.sqlite
        
    
    - name: Package.json install
      run: npm install
    - name: Build Assets
      run: npm run build
        
    - name: Execute tests (Unit and Feature tests) via PEST
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test --parallel

    - name: Execute Larastan
      run: vendor/bin/phpstan --analyze
    - name: Execute Laravel Pint
      run: vendor/bin/phpstan --test
